FROM alpine:3.19.0

ARG CLOUD_SDK_VERSION=410.0.0
ENV CLOUD_SDK_VERSION=$CLOUD_SDK_VERSION

ARG KUBECTL_VERSION=v1.21.14
ENV KUBECTL_VERSION=$KUBECTL_VERSION

# Dependencies
RUN apk add --no-cache \ 
    bash \
    binutils \
    ca-certificates \
    coreutils \ 
    curl \
    findutils \
    g++ \ 
    gcc \
    git \
    git-crypt \
    gnupg \
    grep \
    jq \
    libc6-compat \
    libc-dev \
    libffi-dev \
    libgcc  \
    linux-headers \
    make \
    ncurses \
    npm \ 
    openssh-client \
    openssl-dev \
    py3-pip \
    python3-dev \
    python3 \
    py3-crcmod \
    rsync \
    util-linux \
    zip 

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
ENV NVM_DIR /root/.nvm
ENV PATH $NVM_DIR:$PATH
RUN chmod +x $NVM_DIR/nvm.sh
RUN $NVM_DIR/nvm.sh --version
RUN $NVM_DIR/nvm.sh install 8
RUN $NVM_DIR/nvm.sh install 10
RUN $NVM_DIR/nvm.sh install 12

# install toolchain for rust as required by cryptography
RUN curl https://sh.rustup.rs -sSf | \
    sh -s -- --default-toolchain stable -y
ENV PATH=/root/.cargo/bin:$PATH

# Install gcloud
ENV PATH /google-cloud-sdk/bin:$PATH
RUN curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \
    tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \
    rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \
    ln -s /lib /lib64 && \
    gcloud config set core/disable_usage_reporting true && \
    gcloud config set component_manager/disable_update_check true && \
    gcloud config set metrics/environment github_docker_image && \
    gcloud components install gke-gcloud-auth-plugin && \
    gcloud --version

# Adds kubectl
RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl \
    && chmod u+x kubectl && mv kubectl /usr/bin/kubectl

# Install docker
RUN export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\.tgz' | sort -r | head -n 1) \
    && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}" \
    && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz "${DOCKER_URL}" \
    && tar -xz -C /tmp -f /tmp/docker.tgz \
    && mv /tmp/docker/* /usr/bin \
    && rm -rf /tmp/docker /tmp/docker.tgz

# Install docker-compose
RUN python3 -m ensurepip --upgrade --default-pip && python3 -m pip install --upgrade pip && python3 -m pip install PyYAML -U && pip3 install docker-compose


# Install git-crypt
RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-git-crypt/master/sgerrand.rsa.pub && \
    wget https://github.com/sgerrand/alpine-pkg-git-crypt/releases/download/0.6.0-r1/git-crypt-0.6.0-r1.apk && \
    rm git-crypt-0.6.0-r1.apk

# Install AWS CLI
ENV PATH /root/.local/bin:$PATH
RUN pip3 install awscli --upgrade --user

